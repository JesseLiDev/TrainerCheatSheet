# #baby version
# g = [[455, "tits", "pussy"] , [333, "ass", "feet"]]

# glist = ["number", "first best", "second best"]

# ser = []
# l = len(g)
# print(l)

# for z in range (0, ):
#     ser.append({ 
#             glist[0]: g[0][0],
#             glist[0]: g[0][0],
#             glist[0]: g[0][0],
#     })


#        ~Data Structure at this point~
#        ID-First-Last
#        3- [Bodyweight, # of workout sessions this week, # of cardio ]
#        4- [Number of tracked days, Number of Low Calorie Days, Avg Cals, Avg Protein, Avg Fats, Avg Carbs] <- Data from the last 7 days
#        5- [Goal Calories, Goal Protein, Goal Fats, Goal Carbs ]
#        6- [All nutrition data by date, cals, protein, fats, carbs...]x = [[7660017, "Beth", "Harden", ["203 lbs", 0, 2], [4, 1, 943.3800000000001, 82.19749999999999, 30.8525, 83.3175], [1051.0, 110.0, 39.0, 66.0], ["2022-08-01", 1235.0, 98.5, 49.5, 79.0, "2022-08-02", 1060.01, 87.88, 40.47, 91.1, "2022-08-03", 942.0, 78.94, 21.2, 117.6, "2022-08-04", 536.51, 63.47, 12.24, 45.57]], [7397039, "Christie", "Morelli", ["153 lbs", 1, 1], [6, 0, 1135.1333333333332, 103.49666666666667, 41.54666666666667, 78.44166666666666], [1100.0, 98.0, 40.0, 87.0], ["2022-08-01", 1071.88, 92.97, 39.26, 93.86, "2022-08-02", 1250.95, 135.03, 37.2, 59.74, "2022-08-03", 1054.11, 121.13, 31.44, 69.37, "2022-08-04", 1055.99, 56.95, 57.74, 110.73, "2022-08-05", 1045.62, 101.9, 43.01, 79.95, "2022-08-06", 1332.25, 113.0, 40.63, 57.0]], [7549163, "Colleen", "Rear", ["239.6 lbs", 0, 0], [4, 0, 1089.25, 61.875, 50.825, 93.45], [1151.0, 123.0, 43.0, 68.0], ["2022-08-01", 1270.0, 86.0, 50.0, 112.0, "2022-08-02", 1061.0, 47.0, 54.8, 92.3, "2022-08-03", 1080.0, 57.0, 51.5, 99.0, "2022-08-04", 946.0, 57.5, 47.0, 70.5]], [7663743, "Colleen", "Sullivan", [0, 0, 0], [], [1200.0, 114.0, 44.0, 87.0], []], [8148365, "Dawn", "King", [0, 0, 0], [], [1378.0, 108.0, 46.0, 133.0], []], [8277823, "Gabby", "Rosenthal", [0, 0, 0], [6, 0, 1661.253333333333, 102.29333333333334, 58.150000000000006, 130.35666666666668], [1398.0, 127.0, 50.0, 110.0], ["2022-08-01", 1516.53, 136.12, 48.52, 131.76, "2022-08-02", 1683.91, 80.52, 47.91, 126.87, "2022-08-03", 1525.21, 105.27, 60.2, 122.3, "2022-08-04", 1633.8, 110.43, 60.28, 151.04, "2022-08-05", 2355.35, 150.31, 73.39, 179.35, "2022-08-06", 1252.72, 31.11, 58.6, 70.82]], [7397051, "Jack", "Morelli", ["174 lbs", 3, 4], [6, 0, 1054.47, 91.92833333333334, 32.870000000000005, 98.94999999999999], [1150.0, 121.0, 42.0, 71.0], ["2022-08-01", 1160.82, 79.59, 47.19, 111.78, "2022-08-02", 1146.0, 148.4, 34.15, 91.3, "2022-08-03", 915.0, 38.29, 31.11, 55.2, "2022-08-04", 1041.0, 105.07, 30.28, 111.7, "2022-08-05", 921.0, 77.07, 26.78, 109.7, "2022-08-06", 1143.0, 103.15, 27.71, 114.02, "2022-08-07", 400.0, 24.0, 10.5, 71.0]], [8161311, "Jaclyn", "Halcrow", [0, 0, 0], [], [1802.0, 134.0, 66.0, 168.0], []], [8260612, "Jana", "Tabor", ["235.8 lbs / 56.8% BF", 3, 4], [6, 1, 1438.6066666666666, 110.59833333333334, 58.055, 128.40333333333334], [1752.0, 122.0, 64.0, 172.0], ["2022-08-01", 1677.0, 121.83, 71.2, 141.7, "2022-08-02", 1802.0, 104.0, 69.0, 222.5, "2022-08-03", 1768.76, 146.18, 87.08, 106.19, "2022-08-04", 1470.0, 134.0, 46.5, 134.0, "2022-08-05", 1523.88, 107.58, 63.55, 139.03, "2022-08-06", 390.0, 50.0, 11.0, 27.0, "2022-08-07", 1010.0, 66.0, 31.0, 133.0]], [7342532, "Jennifer", "Smith", ["138.8 lbs", 0, 0], [5, 3, 696.7, 48.616, 27.188, 67.47200000000001], [1026.0, 100.0, 38.0, 71.0], ["2022-08-01", 640.0, 19.3, 20.5, 73.7, "2022-08-02", 490.0, 33.5, 22.5, 46.5, "2022-08-03", 536.75, 26.14, 22.72, 70.58, "2022-08-04", 706.75, 73.14, 27.22, 54.08, "2022-08-05", 1110.0, 91.0, 43.0, 92.5]], [8394913, "Jennifer", "Solis", ["193 lbs", 2, 0], [6, 0, 1206.8966666666668, 86.56666666666668, 68.54333333333334, 54.71], [1597.0, 130.0, 53.0, 150.0], ["2022-08-01", 1261.0, 97.5, 85.0, 30.0, "2022-08-02", 1237.94, 91.31, 88.56, 11.24, "2022-08-03", 890.88, 98.87, 39.51, 43.78, "2022-08-04", 867.7, 69.36, 59.42, 14.29, "2022-08-05", 1909.0, 129.8, 122.06, 78.14, "2022-08-06", 1074.86, 32.56, 16.71, 150.81, "2022-08-07", 180.0, 1.0, 2.5, 41.0]], [7365712, "Leann", "Klenda", ["196.6 lbs", 0, 2], [2, 1, 650.0, 60.2, 18.1, 63.05], [1374.0, 126.0, 50.0, 105.0], ["2022-08-01", 510.0, 59.0, 13.0, 41.0, "2022-08-03", 790.0, 61.4, 23.2, 85.1]], [7331237, "Pam", "Horton", [0, 0, 0], [], [1100.0, 133.0, 40.0, 52.0], []], [7271566, "Patricia", "LeBlanc", [0, 0, 0], [], [1203.0, 104.0, 47.0, 91.0], []], [7647326, "Sarah", "Quinn", ["156 lbs", 2, 2], [6, 0, 1295.16, 119.04, 43.37833333333334, 104.54166666666667], [1349.0, 137.0, 45.0, 99.0], ["2022-08-01", 1367.81, 137.61, 46.14, 105.91, "2022-08-02", 1357.0, 147.1, 29.31, 126.84, "2022-08-03", 1398.19, 128.85, 56.66, 99.08, "2022-08-04", 1311.59, 152.16, 34.5, 102.42, "2022-08-05", 1114.0, 54.74, 36.61, 110.0, "2022-08-06", 1222.37, 93.78, 57.05, 83.0]], [8401809, "Stephanie", "Devik", [0, 4, 0], [6, 2, 1086.7966666666666, 92.24166666666667, 38.59166666666666, 103.88499999999999], [1651.0, 130.0, 55.0, 159.0], ["2022-08-01", 620.0, 48.0, 24.0, 69.0, "2022-08-02", 1629.52, 131.76, 67.76, 117.54, "2022-08-03", 1420.16, 112.23, 57.15, 131.62, "2022-08-04", 1180.8, 107.7, 34.75, 134.5, "2022-08-05", 1528.1, 152.06, 47.82, 134.1, "2022-08-06", 142.2, 1.7, 0.07, 36.55]], [8232485, "Tara", "Miller", [0, 0, 0], [], [1349.0, 119.0, 45.0, 117.0], []], [7571188, "Tina", "Phillips", ["154 lbs", 0, 1], [2, 1, 935.2, 54.365, 30.44, 104.53999999999999], [1200.0, 101.0, 47.0, 94.0], ["2022-08-01", 1377.4, 89.73, 44.88, 169.98, "2022-08-06", 493.0, 19.0, 16.0, 39.1]], [7671940, "Tricia", "Biever", [0, 0, 0], [4, 1, 721.905, 37.945, 24.0, 71.5], [1200.0, 124.0, 44.0, 77.0], ["2022-08-03", 874.0, 46.77, 25.5, 89.0, "2022-08-04", 724.54, 35.67, 25.0, 64.0, "2022-08-05", 724.54, 35.67, 25.0, 64.0, "2022-08-06", 564.54, 33.67, 20.5, 69.0, "2022-08-07", 390.0, 15.0, 9.0, 30.0]]]
 
x = [[7660017, "Beth", "Harden", ["203 lbs", 0, 2], [4, 1, 943.3800000000001, 82.19749999999999, 30.8525, 83.3175], [1051.0, 110.0, 39.0, 66.0], ["2022-08-01", 1235.0, 98.5, 49.5, 79.0, "2022-08-02", 1060.01, 87.88, 40.47, 91.1, "2022-08-03", 942.0, 78.94, 21.2, 117.6, "2022-08-04", 536.51, 63.47, 12.24, 45.57]], [7397039, "Christie", "Morelli", ["153 lbs", 1, 1], [6, 0, 1135.1333333333332, 103.49666666666667, 41.54666666666667, 78.44166666666666], [1100.0, 98.0, 40.0, 87.0], ["2022-08-01", 1071.88, 92.97, 39.26, 93.86, "2022-08-02", 1250.95, 135.03, 37.2, 59.74, "2022-08-03", 1054.11, 121.13, 31.44, 69.37, "2022-08-04", 1055.99, 56.95, 57.74, 110.73, "2022-08-05", 1045.62, 101.9, 43.01, 79.95, "2022-08-06", 1332.25, 113.0, 40.63, 57.0]], [7549163, "Colleen", "Rear", ["239.6 lbs", 0, 0], [4, 0, 1089.25, 61.875, 50.825, 93.45], [1151.0, 123.0, 43.0, 68.0], ["2022-08-01", 1270.0, 86.0, 50.0, 112.0, "2022-08-02", 1061.0, 47.0, 54.8, 92.3, "2022-08-03", 1080.0, 57.0, 51.5, 99.0, "2022-08-04", 946.0, 57.5, 47.0, 70.5]], [7663743, "Colleen", "Sullivan", [0, 0, 0], [], [1200.0, 114.0, 44.0, 87.0], []], [8148365, "Dawn", "King", [0, 0, 0], [], [1378.0, 108.0, 46.0, 133.0], []], [8277823, "Gabby", "Rosenthal", [0, 0, 0], [6, 0, 1661.253333333333, 102.29333333333334, 58.150000000000006, 130.35666666666668], [1398.0, 127.0, 50.0, 110.0], ["2022-08-01", 1516.53, 136.12, 48.52, 131.76, "2022-08-02", 1683.91, 80.52, 47.91, 126.87, "2022-08-03", 1525.21, 105.27, 60.2, 122.3, "2022-08-04", 1633.8, 110.43, 60.28, 151.04, "2022-08-05", 2355.35, 150.31, 73.39, 179.35, "2022-08-06", 1252.72, 31.11, 58.6, 70.82]], [7397051, "Jack", "Morelli", ["174 lbs", 3, 4], [6, 0, 1054.47, 91.92833333333334, 32.870000000000005, 98.94999999999999], [1150.0, 121.0, 42.0, 71.0], ["2022-08-01", 1160.82, 79.59, 47.19, 111.78, "2022-08-02", 1146.0, 148.4, 34.15, 91.3, "2022-08-03", 915.0, 38.29, 31.11, 55.2, "2022-08-04", 1041.0, 105.07, 30.28, 111.7, "2022-08-05", 921.0, 77.07, 26.78, 109.7, "2022-08-06", 1143.0, 103.15, 27.71, 114.02, "2022-08-07", 400.0, 24.0, 10.5, 71.0]], [8161311, "Jaclyn", "Halcrow", [0, 0, 0], [], [1802.0, 134.0, 66.0, 168.0], []], [8260612, "Jana", "Tabor", ["235.8 lbs / 56.8% BF", 3, 4], [6, 1, 1438.6066666666666, 110.59833333333334, 58.055, 128.40333333333334], [1752.0, 122.0, 64.0, 172.0], ["2022-08-01", 1677.0, 121.83, 71.2, 141.7, "2022-08-02", 1802.0, 104.0, 69.0, 222.5, "2022-08-03", 1768.76, 146.18, 87.08, 106.19, "2022-08-04", 1470.0, 134.0, 46.5, 134.0, "2022-08-05", 1523.88, 107.58, 63.55, 139.03, "2022-08-06", 390.0, 50.0, 11.0, 27.0, "2022-08-07", 1010.0, 66.0, 31.0, 133.0]], [7342532, "Jennifer", "Smith", ["138.8 lbs", 0, 0], [5, 3, 696.7, 48.616, 27.188, 67.47200000000001], [1026.0, 100.0, 38.0, 71.0], ["2022-08-01", 640.0, 19.3, 20.5, 73.7, "2022-08-02", 490.0, 33.5, 22.5, 46.5, "2022-08-03", 536.75, 26.14, 22.72, 70.58, "2022-08-04", 706.75, 73.14, 27.22, 54.08, "2022-08-05", 1110.0, 91.0, 43.0, 92.5]], [8394913, "Jennifer", "Solis", ["193 lbs", 2, 0], [6, 0, 1206.8966666666668, 86.56666666666668, 68.54333333333334, 54.71], [1597.0, 130.0, 53.0, 150.0], ["2022-08-01", 1261.0, 97.5, 85.0, 30.0, "2022-08-02", 1237.94, 91.31, 88.56, 11.24, "2022-08-03", 890.88, 98.87, 39.51, 43.78, "2022-08-04", 867.7, 69.36, 59.42, 14.29, "2022-08-05", 1909.0, 129.8, 122.06, 78.14, "2022-08-06", 1074.86, 32.56, 16.71, 150.81, "2022-08-07", 180.0, 1.0, 2.5, 41.0]], [7365712, "Leann", "Klenda", ["196.6 lbs", 0, 2], [2, 1, 650.0, 60.2, 18.1, 63.05], [1374.0, 126.0, 50.0, 105.0], ["2022-08-01", 510.0, 59.0, 13.0, 41.0, "2022-08-03", 790.0, 61.4, 23.2, 85.1]], [7331237, "Pam", "Horton", [0, 0, 0], [], [1100.0, 133.0, 40.0, 52.0], []], [7271566, "Patricia", "LeBlanc", [0, 0, 0], [], [1203.0, 104.0, 47.0, 91.0], []], [7647326, "Sarah", "Quinn", ["156 lbs", 2, 2], [6, 0, 1295.16, 119.04, 43.37833333333334, 104.54166666666667], [1349.0, 137.0, 45.0, 99.0], ["2022-08-01", 1367.81, 137.61, 46.14, 105.91, "2022-08-02", 1357.0, 147.1, 29.31, 126.84, "2022-08-03", 1398.19, 128.85, 56.66, 99.08, "2022-08-04", 1311.59, 152.16, 34.5, 102.42, "2022-08-05", 1114.0, 54.74, 36.61, 110.0, "2022-08-06", 1222.37, 93.78, 57.05, 83.0]], [8401809, "Stephanie", "Devik", [0, 4, 0], [6, 2, 1086.7966666666666, 92.24166666666667, 38.59166666666666, 103.88499999999999], [1651.0, 130.0, 55.0, 159.0], ["2022-08-01", 620.0, 48.0, 24.0, 69.0, "2022-08-02", 1629.52, 131.76, 67.76, 117.54, "2022-08-03", 1420.16, 112.23, 57.15, 131.62, "2022-08-04", 1180.8, 107.7, 34.75, 134.5, "2022-08-05", 1528.1, 152.06, 47.82, 134.1, "2022-08-06", 142.2, 1.7, 0.07, 36.55]], [8232485, "Tara", "Miller", [0, 0, 0], [], [1349.0, 119.0, 45.0, 117.0], []], [7571188, "Tina", "Phillips", ["154 lbs", 0, 1], [2, 1, 935.2, 54.365, 30.44, 104.53999999999999], [1200.0, 101.0, 47.0, 94.0], ["2022-08-01", 1377.4, 89.73, 44.88, 169.98, "2022-08-06", 493.0, 19.0, 16.0, 39.1]], [7671940, "Tricia", "Biever", [0, 0, 0], [4, 1, 721.905, 37.945, 24.0, 71.5], [1200.0, 124.0, 44.0, 77.0], ["2022-08-03", 874.0, 46.77, 25.5, 89.0, "2022-08-04", 724.54, 35.67, 25.0, 64.0, "2022-08-05", 724.54, 35.67, 25.0, 64.0, "2022-08-06", 564.54, 33.67, 20.5, 69.0, "2022-08-07", 390.0, 15.0, 9.0, 30.0]]]

keyList = ["clientID", "firstName", "lastName", "weight","numOfWorkouts","numOfCardio","numOfNutrition","numOfLowCal","avgCal","avgProtein","avgFat","avgCarb","goalCal","goalProtein","goalFats","goalCarb"]

n = len(x)
res = [] 
for z in range(0, n, 1): 
    if len(x[z][4]) != 0:

        res.append({
            keyList[0]: x[z][0],
            keyList[1]: x[z][1],
            keyList[2]: x[z][2],
            keyList[3]: x[z][3][0],
            keyList[4]: x[z][3][1],
            keyList[5]: x[z][3][2],
            keyList[6]: x[z][4][0],
            keyList[7]: x[z][4][1],
            keyList[8]: x[z][4][2],
            keyList[9]: x[z][4][3],
            keyList[10]: x[z][4][4],
            keyList[11]: x[z][4][5],
            keyList[12]: x[z][5][0],
            keyList[13]: x[z][5][1],
            keyList[14]: x[z][5][2],
            keyList[15]: x[z][5][3],
            })
    else:
         res.append({
            keyList[0]: x[z][0],
            keyList[1]: x[z][1],
            keyList[2]: x[z][2],
            keyList[3]: x[z][3][0],
            keyList[4]: x[z][3][1],
            keyList[5]: x[z][3][2],
            keyList[6]: 0,
            keyList[7]: 0,
            keyList[8]: 0,
            keyList[9]: 0,
            keyList[10]: 0,
            keyList[11]: 0,
            keyList[12]: x[z][5][0],
            keyList[13]: x[z][5][1],
            keyList[14]: x[z][5][2],
            keyList[15]: x[z][5][3]
            })

print(res)









#   self.firstName = clientData[1]
#         self.lastName = clientData[2] 
#         self.weight = str(clientData[3][0])

#         self.workoutCount = str(clientData[3][1]) 
#         self.cardioCount = str(clientData[3][2]) 

#         if len(clientData[4]) != 0:
#             self.foodTrackCount = str(clientData[4][0]) 
#             self.lowCaldayCount = str(clientData[4][1])
#             self.avgCals = str(int(clientData[4][2])) 
#             self.avgProtein = str(int(clientData[4][3]))
#             self.avgFats = str(int(clientData[4][4])) 
#             self.avgCarbs = str(int(clientData[4][5]))
#         else:
#             self.foodTrackCount = str(0)
#             self.lowCaldayCount = str(0)
#             self.avgCals = str(0)
#             self.avgProtein = str(0)
#             self.avgFats = str(0)
#             self.avgCarbs = str(0)

#         self.calTarget = str(int(clientData[5][0]))  
#         self.proteinTarget = str(int(clientData[5][1])) 
#         self.fatTarget = str(int(clientData[5][2]))  
#         self.carbTarget = str(int(clientData[5][3])) 